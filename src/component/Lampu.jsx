/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useBox } from "@react-three/cannon";
import { useGLTF } from '@react-three/drei'

export default function Model({ ...props }) {
  const { nodes, materials } = useGLTF('/lampu/lampu.glb')

  const [ref] = useBox((index) => ({
    type: "Static",
    mass: 1,
    args: props.args,
    position: props.position,

    ...props,
  }));
  
  return (
    <group ref={ref} {...props} dispose={null}>
      <mesh geometry={nodes.Plane.geometry} material={materials['Material.001']} position={[-0.12, 0.97, -0.23]} scale={2.58} />
      <mesh geometry={nodes.Plane001.geometry} material={materials['Material.001']} position={[0, 1.15, 0]} scale={[-0.1, -0.19, -0.1]} />
      <group position={[0.01, 7.12, 0]} scale={0.38}>
        <mesh geometry={nodes.Plane002_1.geometry} material={materials['Material.003']} />
        <mesh geometry={nodes.Plane002_2.geometry} material={materials['Material.001']} />
      </group>
      <mesh geometry={nodes.Plane003.geometry} material={materials['Material.001']} position={[0.02, 8.95, 0.18]} rotation={[0, 0, Math.PI]} scale={[0.38, 0.16, 0.38]} />
      <mesh geometry={nodes.Sphere.geometry} material={materials['Material.001']} position={[0.01, 8.24, 0.02]} scale={0.51} />
      <mesh geometry={nodes.Cylinder.geometry} material={materials['Material.001']} position={[0.01, 8.68, 0.02]} scale={[0.14, 0.03, 0.14]} />
    </group>
  )
}

useGLTF.preload('/lampu/lampu.glb')
